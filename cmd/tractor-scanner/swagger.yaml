swagger: '2.0'
info:
  description: >-
    Scanner API for tractor
  version: 1.0.0
  title: Tractor Scanner
  contact:
    email: dev@baryshnikov.net
  license:
    name: MIT
basePath: /tractor
schemes:
  - http
paths:
  /flows/:
    get:
      summary: Get list of all flows
      description: ''
      operationId: ListFlows
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/EnumItem'
        '502':
          description: Database failed
  /events/:
    get:
      summary: Get list of all events
      description: ''
      operationId: ListEvents
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/EnumItem'
        '502':
          description: Database failed
    put:
      summary: 'Send specified events back to event bus'
      description: ''
      operationId: ResendEvents
      consumes:
        - application/json
      parameters:
        - in: body
          name: event_id
          required: true
          schema:
            type: array
            description: "events ID to resend"
            items:
              type: integer
      responses:
        204:
          description: 'Sent'
        '502':
          description: System failed

  /event/{name}/messages/:
    get:
      summary: Get list of records for events
      description: ''
      operationId: ListRecordsForEvent
      parameters:
        - in: path
          name: name
          type: string
          required: true
          description: "Event name"
        - in: query
          type: integer
          name: from
          default: 0
          description: "Latest known ID"
        - in: query
          type: integer
          minimum: 1
          default: 1
          name: limit
          description: "Limit size of records"
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/RecordItem'
        '502':
          description: Database failed

  /services/:
    get:
      summary: Get list of all services
      description: ''
      operationId: ListServices
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/EnumItem'
        '502':
          description: Database failed

  /service/{name}/messages/:
    get:
      summary: Get list of records for service
      description: ''
      operationId: ListRecordsForService
      parameters:
        - in: path
          name: name
          type: string
          required: true
          description: "Service name"
        - in: query
          type: integer
          name: from
          default: 0
          description: "Latest known ID"
        - in: query
          type: integer
          minimum: 1
          default: 1
          name: limit
          description: "Limit size of records"
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/RecordItem'
        '502':
          description: Database failed


  /messages/:
    get:
      summary: Get list of records
      description: ''
      operationId: ListRecords
      parameters:
        - in: query
          type: integer
          name: from
          default: 0
          description: "Latest known ID"
        - in: query
          type: integer
          minimum: 1
          default: 1
          name: limit
          description: "Limit size of records"
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/RecordItem'
        '502':
          description: Database failed

  /track/{message_id}/:
    get:
      summary: Get list of messages with same message ID
      description: ''
      operationId: TrackMessage
      parameters:
        - in: path
          type: string
          name: message_id
          required: true
          description: "Trackable message ID"
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/RecordItem'
        '502':
          description: Database failed
definitions:
  EnumItem:
    type: object
    description: General item in enum
    properties:
      id:
        type: integer
      created_at:
        type: integer
        description: "Time in ms from epoch"
      name:
        type: string
  RecordItem:
    type: object
    properties:
      id:
        type: integer
      created_at:
        type: integer
        description: "Time in ms from epoch"
      event_id:
        type: integer
      event_msgid:
        type: string
      event_timestamp:
        type: integer
        description: "Time in ms from epoch"
      flow_id:
        type: integer
      from_service_id:
        type: integer
      last_service_id:
        type: integer
      repeat:
        type: integer
      headers:
        type: object
      body:
        type: string
        description: "Base64 encoded"
      event_name:
        type: string
      event_created_at:
        type: integer
        description: "Time in ms from epoch"
      flow_name:
        type: string
      flow_created_at:
        type: integer
        description: "Time in ms from epoch"
      from_service_name:
        type: string
      from_service_created_at:
        type: integer
        description: "Time in ms from epoch"
      last_service_name:
        type: string
      last_service_created_at:
        type: integer
        description: "Time in ms from epoch"
externalDocs:
  url: 'https://github.com/reddec/tractor'